<MudMenu AnchorOrigin="Origin.BottomRight" LockScroll="true" TransformOrigin="Origin.TopRight">
    <ActivatorContent>
        <MudIconButton Icon="@Icons.Material.Filled.Person" Color="Color.Inherit" />
    </ActivatorContent>
    <ChildContent>
        <div class="py-2" style="min-width: 220px">
            <PersonCard Class="mt-n2" Style="margin-bottom:0px!important" />
            <MudMenuItem OnClick="Profile">
                <div class="d-flex">
                    <MudIcon Class="mx-2" Icon="@Icons.Material.Filled.Person" />
                    <MudText>Profile</MudText>
                </div>
            </MudMenuItem>
            <MudMenuItem OnClick="ProfileClaims">
                <div class="d-flex">
                    <MudIcon Class="mx-2" Icon="@Icons.Material.Filled.ManageAccounts" />
                    <MudText>Profile/Claims</MudText>
                </div>
            </MudMenuItem>
            <MudMenuItem OnClick="AuditLogs">
                <div class="d-flex">
                    <MudIcon Class="mx-2" Icon="@Icons.Material.Filled.LibraryBooks" />
                    <MudText>Logs</MudText>
                </div>
            </MudMenuItem>

            <MudDivider />

            <MudMenuItem OnClick="ThemeManager">
                <div class="d-flex">
                    <MudIcon Class="mx-2" Icon="@Icons.Material.Filled.Brush" />
                    <MudText>Theme Manager</MudText>
                </div>
            </MudMenuItem>

            <div class="mt-4 mx-4">
                <MudButton Color="Color.Error" FullWidth="true" StartIcon="@Icons.Material.Filled.Logout"
                           Variant="Variant.Filled" OnClick="Logout">
                    Log out
                </MudButton>
            </div>
        </div>
    </ChildContent>
</MudMenu>

@code {

    [Parameter]
    public EventCallback<MouseEventArgs> ThemeManagerOnClick { get; set; }

    private void Profile()
    {
        Navigation.NavigateTo("/account");
    }

    private void ProfileClaims()
    {
        Navigation.NavigateTo("/profileold");
    }

    private void AuditLogs()
    {
        Navigation.NavigateTo("/audit-logs");
    }
    
    private async Task ThemeManager()
    {
        await ThemeManagerOnClick.InvokeAsync();
    }

    private void Logout()
    {
        var parameters = new DialogParameters
            {
                { nameof(Dialogs.LogOut.ContentText), "Are you sure you want to log out?"},
                { nameof(Dialogs.LogOut.ButtonText), "Log Out"},
                { nameof(Dialogs.LogOut.Color), Color.Error}
            };

        var options = new DialogOptions { CloseButton = true, MaxWidth = MaxWidth.Small, FullWidth = true };
        DialogService.Show<Dialogs.LogOut>("LogOut", parameters, options);
    }

}
