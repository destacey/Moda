{
  "x-generator": "NSwag v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Moda API",
    "license": {
      "name": "MIT License",
      "url": "https://github.com/destacey/Moda/blob/main/LICENSE.md"
    },
    "version": "v1"
  },
  "paths": {
    "/api/backgroundjobs/running": {
      "get": {
        "tags": [
          "BackgroundJobs"
        ],
        "summary": "Get a list of running jobs.",
        "operationId": "BackgroundJobs_GetRunningJobs",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BackgroundJobDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/backlogcategories": {
      "get": {
        "tags": [
          "BacklogCategories"
        ],
        "summary": "Get a list of all backlog categories.",
        "operationId": "BacklogCategories_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConnectorListDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/backloglevels": {
      "get": {
        "tags": [
          "BacklogLevels"
        ],
        "summary": "Get a list of all backlog levels.",
        "operationId": "BacklogLevels_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BacklogLevelDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "BacklogLevels"
        ],
        "summary": "Create a backlog level.",
        "operationId": "BacklogLevels_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBacklogLevelRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/backloglevels/{id}": {
      "get": {
        "tags": [
          "BacklogLevels"
        ],
        "summary": "Get backlog level details using the id.",
        "operationId": "BacklogLevels_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BacklogLevelDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "BacklogLevels"
        ],
        "summary": "Update a backlog level.",
        "operationId": "BacklogLevels_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBacklogLevelRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/workstatecategories": {
      "get": {
        "tags": [
          "WorkStateCategories"
        ],
        "summary": "Get a list of all work state categories.",
        "operationId": "WorkStateCategories_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConnectorListDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/workstates": {
      "get": {
        "tags": [
          "WorkStates"
        ],
        "summary": "Get a list of all work states.",
        "operationId": "WorkStates_GetList",
        "parameters": [
          {
            "name": "includeInactive",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkStateDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "WorkStates"
        ],
        "summary": "Create a work state.",
        "operationId": "WorkStates_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkStateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/workstates/{id}": {
      "get": {
        "tags": [
          "WorkStates"
        ],
        "summary": "Get work state details using the id.",
        "operationId": "WorkStates_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkStateDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "WorkStates"
        ],
        "summary": "Update a work state.",
        "operationId": "WorkStates_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkStateRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/worktypes": {
      "get": {
        "tags": [
          "WorkTypes"
        ],
        "summary": "Get a list of all work types.",
        "operationId": "WorkTypes_GetList",
        "parameters": [
          {
            "name": "includeInactive",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkTypeDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "WorkTypes"
        ],
        "summary": "Create a work type.",
        "operationId": "WorkTypes_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkTypeRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/worktypes/{id}": {
      "get": {
        "tags": [
          "WorkTypes"
        ],
        "summary": "Get work type details using the id.",
        "operationId": "WorkTypes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkTypeDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "WorkTypes"
        ],
        "summary": "Update a work type.",
        "operationId": "WorkTypes_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkTypeRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/employees": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get a list of all employees.",
        "operationId": "Employees_GetList",
        "parameters": [
          {
            "name": "includeInactive",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeListDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Create an employee.",
        "operationId": "Employees_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmployeeRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/employees/{id}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get employee details using the localId.",
        "operationId": "Employees_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDetailsDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Employees"
        ],
        "summary": "Update an employee.",
        "operationId": "Employees_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmployeeRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get a list of all roles.",
        "operationId": "Roles_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleListDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Create or update a role.",
        "operationId": "Roles_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateRoleRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/roles/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get role details.",
        "operationId": "Roles_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Delete a role.",
        "operationId": "Roles_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/roles/{id}/permissions": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get role details with its permissions.",
        "operationId": "Roles_GetByIdWithPermissions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "summary": "Update a role's permissions.",
        "operationId": "Roles_UpdatePermissions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRolePermissionsRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get list of all users.",
        "operationId": "Users_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDetailsDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user's details.",
        "operationId": "Users_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/users/{id}/roles": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user's roles.",
        "operationId": "Users_GetRoles",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRoleDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Update a user's assigned roles.",
        "operationId": "Users_AssignRoles",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignUserRolesRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/users/{id}/toggle-status": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Toggle a user's active status.",
        "operationId": "Users_ToggleStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleUserStatusRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/profile": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get profile details of currently logged in user.",
        "operationId": "Profile_Get",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Profile"
        ],
        "summary": "Update profile details of currently logged in user.",
        "operationId": "Profile_Update",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/profile/permissions": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get permissions of currently logged in user.",
        "operationId": "Profile_GetPermissions",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/profile/logs": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get audit logs of currently logged in user.",
        "operationId": "Profile_GetLogs",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/azuredevopsboardsconnections": {
      "get": {
        "tags": [
          "AzureDevOpsBoardsConnections"
        ],
        "summary": "Get a list of all Azure DevOps Boards connections.",
        "operationId": "AzureDevOpsBoardsConnections_GetList",
        "parameters": [
          {
            "name": "includeDisabled",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConnectionListDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "AzureDevOpsBoardsConnections"
        ],
        "summary": "Create an Azure DevOps Boards connection.",
        "operationId": "AzureDevOpsBoardsConnections_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAzureDevOpsBoardConnectionRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/azuredevopsboardsconnections/{id}": {
      "get": {
        "tags": [
          "AzureDevOpsBoardsConnections"
        ],
        "summary": "Get Azure DevOps Boards connection based on id.",
        "operationId": "AzureDevOpsBoardsConnections_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConnectionListDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "AzureDevOpsBoardsConnections"
        ],
        "summary": "Update an Azure DevOps Boards connection.",
        "operationId": "AzureDevOpsBoardsConnections_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAzureDevOpsBoardConnectionRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/azuredevopsboardsconnections/{id}/config": {
      "get": {
        "tags": [
          "AzureDevOpsBoardsConnections"
        ],
        "summary": "Get Azure DevOps Boards connection based on id.",
        "operationId": "AzureDevOpsBoardsConnections_GetConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AzureDevOpsBoardsConnectionConfigurationDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "AzureDevOpsBoardsConnections"
        ],
        "summary": "Update an Azure DevOps Boards connection.",
        "operationId": "AzureDevOpsBoardsConnections_UpdateConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAzureDevOpsBoardConnectionConfigurationRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/connectors": {
      "get": {
        "tags": [
          "Connectors"
        ],
        "summary": "Get a list of all connectors.",
        "operationId": "Connectors_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConnectorListDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BackgroundJobDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "method": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MethodInfo"
              }
            ]
          },
          "args": {
            "type": "array",
            "items": {}
          },
          "inProcessingState": {
            "type": "boolean"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "MethodInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MethodBase"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "memberType": {
                "$ref": "#/components/schemas/MemberTypes"
              },
              "returnParameter": {
                "$ref": "#/components/schemas/ParameterInfo"
              },
              "returnType": {
                "type": "string"
              }
            }
          }
        ]
      },
      "MemberTypes": {
        "type": "integer",
        "description": "",
        "x-enumFlags": true,
        "x-enumNames": [
          "Constructor",
          "Event",
          "Field",
          "Method",
          "Property",
          "TypeInfo",
          "Custom",
          "NestedType",
          "All"
        ],
        "enum": [
          1,
          2,
          4,
          8,
          16,
          32,
          64,
          128,
          191
        ]
      },
      "ParameterInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ParameterAttributes"
          },
          "member": {
            "$ref": "#/components/schemas/MemberInfo"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parameterType": {
            "type": "string"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "isIn": {
            "type": "boolean"
          },
          "isLcid": {
            "type": "boolean"
          },
          "isOptional": {
            "type": "boolean"
          },
          "isOut": {
            "type": "boolean"
          },
          "isRetval": {
            "type": "boolean"
          },
          "defaultValue": {
            "nullable": true
          },
          "rawDefaultValue": {
            "nullable": true
          },
          "hasDefaultValue": {
            "type": "boolean"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            }
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ParameterAttributes": {
        "type": "integer",
        "description": "",
        "x-enumFlags": true,
        "x-enumNames": [
          "None",
          "In",
          "Out",
          "Lcid",
          "Retval",
          "Optional",
          "HasDefault",
          "HasFieldMarshal",
          "Reserved3",
          "Reserved4",
          "ReservedMask"
        ],
        "enum": [
          0,
          1,
          2,
          4,
          8,
          16,
          4096,
          8192,
          16384,
          32768,
          61440
        ]
      },
      "MemberInfo": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            }
          },
          "isCollectible": {
            "type": "boolean"
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Module": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "fullyQualifiedName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32"
          },
          "moduleVersionId": {
            "type": "string",
            "format": "guid"
          },
          "scopeName": {
            "type": "string"
          },
          "moduleHandle": {
            "$ref": "#/components/schemas/ModuleHandle"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            }
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Assembly": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "definedTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "exportedTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "codeBase": {
            "type": "string",
            "deprecated": true,
            "x-deprecatedMessage": "Assembly.CodeBase and Assembly.EscapedCodeBase are only included for .NET Framework compatibility. Use Assembly.Location.",
            "nullable": true
          },
          "entryPoint": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MethodInfo"
              }
            ]
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "imageRuntimeVersion": {
            "type": "string"
          },
          "isDynamic": {
            "type": "boolean"
          },
          "location": {
            "type": "string"
          },
          "reflectionOnly": {
            "type": "boolean"
          },
          "isCollectible": {
            "type": "boolean"
          },
          "isFullyTrusted": {
            "type": "boolean"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            }
          },
          "escapedCodeBase": {
            "type": "string",
            "deprecated": true,
            "x-deprecatedMessage": "Assembly.CodeBase and Assembly.EscapedCodeBase are only included for .NET Framework compatibility. Use Assembly.Location."
          },
          "manifestModule": {
            "$ref": "#/components/schemas/Module"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Module"
            }
          },
          "globalAssemblyCache": {
            "type": "boolean",
            "deprecated": true,
            "x-deprecatedMessage": "The Global Assembly Cache is not supported."
          },
          "hostContext": {
            "type": "integer",
            "format": "int64"
          },
          "securityRuleSet": {
            "$ref": "#/components/schemas/SecurityRuleSet"
          }
        }
      },
      "CustomAttributeData": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "attributeType": {
            "type": "string"
          },
          "constructor": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "constructorArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeTypedArgument"
            }
          },
          "namedArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeNamedArgument"
            }
          }
        }
      },
      "ConstructorInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MethodBase"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "memberType": {
                "$ref": "#/components/schemas/MemberTypes"
              }
            }
          }
        ]
      },
      "MethodBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MemberInfo"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "methodImplementationFlags": {
                "$ref": "#/components/schemas/MethodImplAttributes"
              },
              "callingConvention": {
                "$ref": "#/components/schemas/CallingConventions"
              },
              "isAbstract": {
                "type": "boolean"
              },
              "isConstructor": {
                "type": "boolean"
              },
              "isFinal": {
                "type": "boolean"
              },
              "isHideBySig": {
                "type": "boolean"
              },
              "isSpecialName": {
                "type": "boolean"
              },
              "isStatic": {
                "type": "boolean"
              },
              "isVirtual": {
                "type": "boolean"
              },
              "isAssembly": {
                "type": "boolean"
              },
              "isFamily": {
                "type": "boolean"
              },
              "isFamilyAndAssembly": {
                "type": "boolean"
              },
              "isFamilyOrAssembly": {
                "type": "boolean"
              },
              "isPrivate": {
                "type": "boolean"
              },
              "isPublic": {
                "type": "boolean"
              },
              "isConstructedGenericMethod": {
                "type": "boolean"
              },
              "isGenericMethod": {
                "type": "boolean"
              },
              "isGenericMethodDefinition": {
                "type": "boolean"
              },
              "containsGenericParameters": {
                "type": "boolean"
              },
              "isSecurityCritical": {
                "type": "boolean"
              },
              "isSecuritySafeCritical": {
                "type": "boolean"
              },
              "isSecurityTransparent": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "MethodImplAttributes": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "IL",
          "Managed",
          "Native",
          "OPTIL",
          "Runtime",
          "CodeTypeMask",
          "Unmanaged",
          "ManagedMask",
          "NoInlining",
          "ForwardRef",
          "Synchronized",
          "NoOptimization",
          "PreserveSig",
          "AggressiveInlining",
          "AggressiveOptimization",
          "InternalCall",
          "MaxMethodImplVal"
        ],
        "enum": [
          0,
          0,
          1,
          2,
          3,
          3,
          4,
          4,
          8,
          16,
          32,
          64,
          128,
          256,
          512,
          4096,
          65535
        ]
      },
      "CallingConventions": {
        "type": "integer",
        "description": "",
        "x-enumFlags": true,
        "x-enumNames": [
          "Standard",
          "VarArgs",
          "Any",
          "HasThis",
          "ExplicitThis"
        ],
        "enum": [
          1,
          2,
          3,
          32,
          64
        ]
      },
      "CustomAttributeTypedArgument": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "argumentType": {
            "type": "string"
          },
          "value": {
            "nullable": true
          }
        }
      },
      "CustomAttributeNamedArgument": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "memberInfo": {
            "$ref": "#/components/schemas/MemberInfo"
          },
          "typedValue": {
            "$ref": "#/components/schemas/CustomAttributeTypedArgument"
          },
          "memberName": {
            "type": "string"
          },
          "isField": {
            "type": "boolean"
          }
        }
      },
      "SecurityRuleSet": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "None",
          "Level1",
          "Level2"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "ModuleHandle": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ConnectorListDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BacklogLevelDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/BacklogCategory"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BacklogCategory": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Portfolio",
          "Requirement",
          "Task",
          "Other"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "HttpValidationProblemDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProblemDetails"
          },
          {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "properties": {
              "errors": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "ErrorResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "messages": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "exception": {
            "type": "string",
            "nullable": true
          },
          "errorId": {
            "type": "string",
            "nullable": true
          },
          "supportMessage": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateBacklogLevelRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the work type.  The name cannot be changed.",
            "maxLength": 256,
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string",
            "description": "The description of the work type.",
            "maxLength": 1024,
            "minLength": 0,
            "nullable": true
          },
          "rank": {
            "type": "integer",
            "description": "The rank of the backlog level. The higher the number, the higher the level.",
            "format": "int32"
          }
        }
      },
      "UpdateBacklogLevelRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the work type.  The name cannot be changed.",
            "maxLength": 256,
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string",
            "description": "The description of the work type.",
            "maxLength": 1024,
            "minLength": 0,
            "nullable": true
          },
          "rank": {
            "type": "integer",
            "description": "The rank of the backlog level. The higher the number, the higher the level.",
            "format": "int32"
          }
        }
      },
      "WorkStateDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "CreateWorkStateRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the work state.  The name cannot be changed.",
            "maxLength": 256,
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string",
            "description": "The description of the work state.",
            "maxLength": 1024,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "UpdateWorkStateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "The description of the work state.",
            "maxLength": 1024,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "WorkTypeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "CreateWorkTypeRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the work type.  The name cannot be changed.",
            "maxLength": 256,
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string",
            "description": "The description of the work type.",
            "maxLength": 1024,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "UpdateWorkTypeRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "The description of the work type.",
            "maxLength": 1024,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "EmployeeListDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "localId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string"
          },
          "suffix": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "employeeNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "jobTitle": {
            "type": "string",
            "nullable": true
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "managerId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "managerLocalId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "managerName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "EmployeeDetailsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "localId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string"
          },
          "suffix": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "employeeNumber": {
            "type": "string"
          },
          "hireDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "email": {
            "type": "string"
          },
          "jobTitle": {
            "type": "string",
            "nullable": true
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "managerId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "managerLocalId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "managerName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "CreateEmployeeRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "employeeNumber",
          "email"
        ],
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Gets the first name.",
            "maxLength": 100,
            "minLength": 1,
            "nullable": false
          },
          "middleName": {
            "type": "string",
            "description": "Gets the middle name.",
            "maxLength": 100,
            "minLength": 0,
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Gets the last name.",
            "maxLength": 100,
            "minLength": 1,
            "nullable": false
          },
          "suffix": {
            "type": "string",
            "description": "Gets the suffix.",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Gets the employee's personal title.",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "employeeNumber": {
            "type": "string",
            "description": "Gets the employee number.",
            "maxLength": 256,
            "minLength": 1,
            "nullable": false
          },
          "hireDate": {
            "type": "string",
            "description": "Gets the hire date.",
            "format": "date",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Gets the email.",
            "maxLength": 256,
            "minLength": 1,
            "nullable": false
          },
          "jobTitle": {
            "type": "string",
            "description": "Gets the job title.",
            "maxLength": 256,
            "minLength": 0,
            "nullable": true
          },
          "department": {
            "type": "string",
            "description": "Gets the department.",
            "maxLength": 256,
            "minLength": 0,
            "nullable": true
          },
          "managerId": {
            "type": "string",
            "description": "Gets the manager identifier.",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "UpdateEmployeeRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "employeeNumber",
          "email"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the identifier.",
            "format": "guid"
          },
          "firstName": {
            "type": "string",
            "description": "Gets the first name.",
            "maxLength": 100,
            "minLength": 1,
            "nullable": false
          },
          "middleName": {
            "type": "string",
            "description": "Gets the middle name.",
            "maxLength": 100,
            "minLength": 0,
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Gets the last name.",
            "maxLength": 100,
            "minLength": 1,
            "nullable": false
          },
          "suffix": {
            "type": "string",
            "description": "Gets the suffix.",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Gets the employee's personal title.",
            "maxLength": 50,
            "minLength": 0,
            "nullable": true
          },
          "employeeNumber": {
            "type": "string",
            "description": "Gets the employee number.",
            "maxLength": 256,
            "minLength": 1,
            "nullable": false
          },
          "hireDate": {
            "type": "string",
            "description": "Gets the hire date.",
            "format": "date",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Gets the email.",
            "maxLength": 256,
            "minLength": 1,
            "nullable": false
          },
          "jobTitle": {
            "type": "string",
            "description": "Gets the job title.",
            "maxLength": 256,
            "minLength": 0,
            "nullable": true
          },
          "department": {
            "type": "string",
            "description": "Gets the department.",
            "maxLength": 256,
            "minLength": 0,
            "nullable": true
          },
          "managerId": {
            "type": "string",
            "description": "Gets the manager identifier.",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "RoleListDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RoleDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateRolePermissionsRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "roleId",
          "permissions"
        ],
        "properties": {
          "roleId": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "permissions": {
            "type": "array",
            "nullable": false,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateOrUpdateRoleRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserDetailsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserRoleDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "roleId": {
            "type": "string",
            "nullable": true
          },
          "roleName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "AssignUserRolesRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "string"
          },
          "userRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRoleDto"
            }
          }
        }
      },
      "ToggleUserStatusRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "string"
          },
          "activateUser": {
            "type": "boolean"
          }
        }
      },
      "UpdateProfileRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "firstName",
          "lastName",
          "email"
        ],
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "firstName": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "nullable": false
          },
          "lastName": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "nullable": false
          },
          "email": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^@]+@[^@]+$",
            "nullable": false
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AuditDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "userId": {
            "type": "string",
            "format": "guid"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "dateTime": {
            "type": "string",
            "format": "date-time"
          },
          "oldValues": {
            "type": "string",
            "nullable": true
          },
          "newValues": {
            "type": "string",
            "nullable": true
          },
          "affectedColumns": {
            "type": "string",
            "nullable": true
          },
          "primaryKey": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ConnectionListDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "connector": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "isValidConfiguration": {
            "type": "boolean"
          }
        }
      },
      "AzureDevOpsBoardsConnectionConfigurationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "connectionId": {
            "type": "string",
            "format": "guid"
          },
          "organization": {
            "type": "string",
            "nullable": true
          },
          "personalAccessToken": {
            "type": "string",
            "nullable": true
          },
          "organizationUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateAzureDevOpsBoardConnectionRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the connection.",
            "maxLength": 256,
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the description.",
            "maxLength": 1024,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "UpdateAzureDevOpsBoardConnectionRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the identifier.",
            "format": "guid"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the connection.",
            "maxLength": 256,
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the description.",
            "maxLength": 1024,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "UpdateAzureDevOpsBoardConnectionConfigurationRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "connectionId": {
            "type": "string",
            "description": "Gets the connection identifier.",
            "format": "guid"
          },
          "organization": {
            "type": "string",
            "description": "Gets the organization.",
            "nullable": true
          },
          "personalAccessToken": {
            "type": "string",
            "description": "Gets the personal access token.",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "oauth2",
        "description": "OAuth2.0 Auth Code with PKCE",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://login.microsoftonline.com/f399216f-be6b-4062-8700-54952e44e7ef/oauth2/v2.0/authorize",
            "tokenUrl": "https://login.microsoftonline.com/f399216f-be6b-4062-8700-54952e44e7ef/oauth2/v2.0/token",
            "scopes": {
              "api://fdca5e6f-46a2-455c-b2f3-06a9a6877190/access_as_user": "access the api"
            }
          }
        }
      }
    }
  }
}