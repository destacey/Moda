name: docker

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - "main"
  #   tags:
  #     - "v*"
  # pull_request:
  #   branches:
  #     - "main"

jobs:
  build-and-test-api:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal
        
  build-and-test-client:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./Moda.Web/src/moda.web.reactclient
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: npm ci
        run: npm ci

      - name: npm run lint
        run: npm run lint

      - name: npm run build
        run: npm run build

      - name: npm run test
        run: npm run test

  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./Moda.Web/src/Moda.Web.Api/Dockerfile
            image: awaldow/moda-api
            contextDir: .
          - dockerfile: ./Moda.Web/src/moda.web.reactclient/Dockerfile
            image: awaldow/moda-client
            contextDir: ./Moda.Web/src/moda.web.reactclient
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
  
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          username: awaldow
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
  
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.image }}
  
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.contextDir }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}