name: docker

on:
    workflow_dispatch:
    push:
        branches:
            - "main"
        tags:
            - "v*"
    pull_request:
        branches:
            - "main"

jobs:
    build-and-test-api:
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash
                working-directory: Moda.Web/src/Moda.Web.Api
        steps:
            - name: checkout
              uses: actions/checkout@v2

            - name: Setup .NET
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: 7.0.x

            - name: Restore dependencies
              run: dotnet restore

            - name: Build
              run: dotnet build --no-restore

            - name: Test
              run: dotnet test --no-build --verbosity normal

    build-and-test-client:
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash
                working-directory: Moda.Web/src/moda.web.reactclient
        steps:
            - name: checkout
              uses: actions/checkout@v2

            - uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: npm ci
              run: npm ci

            - name: npm run lint
              run: npm run lint

            - name: npm run build
              run: npm run build

            - name: npm run test
              run: npm run test

    build-and-push-image:
        runs-on: ubuntu-latest
        needs: [build-and-test-api, build-and-test-client]
        strategy:
            fail-fast: false
            matrix:
                include:
                    - dockerfile: ./Moda.Web/src/Moda.Web.Api/Dockerfile
                      image: awaldow/moda-api
                      contextDir: .
                    - dockerfile: ./Moda.Web/src/moda.web.reactclient/Dockerfile
                      image: awaldow/moda-client
                      contextDir: .
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Log in to the Container registry
              uses: docker/login-action@v2
              with:
                  username: awaldow
                  password: ${{ secrets.DOCKER_HUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v4
              with:
                  images: ${{ matrix.image }}
                  tags: |
                      type=raw,value=latest,enable={{is_default_branch}}
                      type=semver,pattern={{version}}
                      type=semver,pattern={{major}}.{{minor}}
                      type=semver,pattern={{major}}
                      type=sha,format=long
                      type=ref,event=branch
                      type=ref,event=pr

            - name: Build and push Docker image
              uses: docker/build-push-action@v4
              with:
                  context: ${{ matrix.contextDir }}
                  file: ${{ matrix.dockerfile }}
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

    terraform:
        name: "Terraform"
        runs-on: ubuntu-latest
        if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
        needs: [build-and-push-image]
        defaults:
            run:
                working-directory: .iac/moda

        steps:
            - uses: actions/checkout@v3
              name: Checkout

            - uses: hashicorp/setup-terraform@v2
              name: Setup Terraform
              with:
                  cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

            - name: Terraform Init
              id: init
              run: |
                  terraform init
                  terraform workspace select moda-dev
                  terraform workspace show

            - name: Terraform fmt
              id: fmt
              run: terraform fmt -check
              continue-on-error: true

            - name: Terraform Validate
              id: validate
              run: terraform validate -no-color

            - name: Terraform Apply
              id: apply
              run: terraform apply -auto-approve -var="docker_tag=sha-${{ github.sha }}" -var="sql_admin_pass=${{ secrets.SQL_ADMIN_PASSWORD }}" -var="aad_api_client_secret=${{ secrets.AAD_API_CLIENT_SECRET }}"

    deploy:
        name: "Deploy"
        runs-on: ubuntu-latest
        if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
        needs: [terraform]
        steps:
            - uses: actions/checkout@v3
              name: Checkout

            - name: Terraform Output
              id: tfoutputs
              uses: dflook/terraform-output@v1
              with:
                  workspace: moda-dev
                  path: .iac/moda
              env:
                  TERRAFORM_CLOUD_TOKENS: app.terraform.io=${{ secrets.TF_API_TOKEN }}

            - name: Setup .NET
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: 7.0.x

            - name: Restore dependencies
              run: dotnet restore

            - name: Install dotnet ef
              run: dotnet tool install --global dotnet-ef

            - name: Run migrations
              run: |
                  dotnet ef database update --connection "${{ steps.tfoutputs.outputs.sql_server_connection_string }}" --startup-project Moda.Web/src/Moda.Web.Api/Moda.Web.Api.csproj --project Moda.Infrastructure/src/Moda.Infrastructure.Migrators.MSSQL/Moda.Infrastructure.Migrators.MSSQL.csproj
